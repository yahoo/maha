# Copyright 2018, Oath Inc.
# Licensed under the terms of the Apache License 2.0. Please see LICENSE file in project root for terms.
# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="T@NI]fMGyVj/BhqsEd7E4tP=yP42^]O6:76iGfq:w@g]fn3ftZ6deJvLqfbLDJTn"
play.application.loader=loader.DruidManagerLoader
# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# global=Global
application.global=global.Global
custom.hikaricp.maximumPoolSize=35
# Druid configuration
druid.coordinator="http://localhost:9999"
druid.indexer="http://localhost:4080"
druid.broker="http://localhost:8080"
play.ws.ssl.loose.acceptAnyCertificate = true
mgr.ws.timeout.time= 60000
# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

https.port=443
play.server.https.keyStore.path=/druid_mgr_ssl.p12
play.server.https.keyStore.type=PKCS12

druid.lookup = {
  "countSql" : "select count(*) as NUM_ROWS from $tableName",
  "db.password.for.countSql" : "some_password1",
  "db.url.for.countSql" : "jdbc:oracle:thin:@dbname1",
  "db.username.for.countSql" : "some_user1",
  "timestampSql" : "select max(last_updated) as MAX_LAST_UPDATED from $tableName",
  "db.password.for.timestampSql" : "some_password2",
  "db.url.for.timestampSql" : "jdbc:oracle:thin:@dbname2",
  "db.username.for.timestampSql" : "some_user2",
  "passwordProviderClass" : "com.yahoo.maha.maha_druid_lookups.server.lookup.namespace.entity.PasswordProvider"
}

auth.config = {
  "authValidatorClass" : "com.yahoo.maha.core.auth.DefaultAuthValidator"
}

druid.auth.header.provider.config = {
  "druidAuthHeaderProviderClass" : "com.yahoo.maha.core.auth.DefaultDruidAuthHeaderProvider"
}
